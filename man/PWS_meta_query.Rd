% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_functions.R
\name{PWS_meta_query}
\alias{PWS_meta_query}
\title{PWS_meta_query}
\usage{
PWS_meta_query(longitude, latitude, radius, user_key, km_miles = TRUE,
  stdAPI = TRUE)
}
\arguments{
\item{longitude}{Standard Longitude in range -/+180}

\item{latitude}{Standard latitude in range -/+90}

\item{radius}{Radius in kilometers of the circle}

\item{user_key}{Your WUnderground API user key given as a character string}

\item{km_miles}{A bolean variable indicating whether radius is in kilometer (TRUE) or miles (FALSE). The default is kilometers.}

\item{stdAPI}{A bolean variable indicating whether you have a standard (free) API access (TRUE) which only allows for 10 API calls per minute. The default is the standard API.}
}
\value{
A list of two entries. The first has information on the original arguments of the function (radius and coordinates of circle). The second entry contains a data frame with all personal weather stations in the region of the circle.
}
\description{
Given a the coordinates of the centre of a circle and its radius the 'PWS_meta_query'
function downloads the meta data for all personal weather stations in this region from
WUnderground. Due to the limitations of the API this is done by covering the larger
circle with small circles, each of which corresponds to a single API call. This is done
using the auxiliary function createCentroidTable. While downloading the action of each
download is displayed by a '.' If the function is used under standard API settings, only
10 API calls per minute are allowed and the function pauses accordingly. In some instances
the API call only returns partial data. In those cases, the 'PWS_meta_query' function
zooms in, issuing more queries around this area to capture all stations. Those additional
API calls are denoted by ','
}
\examples{
# your.key <- "xxxxxxxxxx" # replace this with your key
# The following command downloads the meta data for all stations in the Rio de Janeiro region:
# Rio_metadata <- PWS_meta_query(-43.185368,-22.856878, 50, your.key)
# if you run the above code with your key the output should be the same as provided here:
data(Rio_basemap)
data(Rio_metadata)
ggmap::ggmap(Rio_basemap)+ggplot2::geom_point(data=Rio_metadata$PWSmetadata,col='red')

}

